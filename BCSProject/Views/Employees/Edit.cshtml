@using BCSProject.Helpers
@model BCSProject.Models.EmployeeViewModel
<h3 class="mt-4">Employee Details</h3>
<hr />
<h4>@ViewBag.ConvertedBirthday</h4>
<div class="container">
    @using (Html.BeginForm())
    {
    @Html.HiddenFor(x => x.Id)
    <div class="form-row">
        <div class="form-group col-4">
            @Html.LabelFor(m => m.EmployeeNo, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.EmployeeNo, htmlAttributes: new { @class = "form-control", @readonly = true })
        </div>
        <div class="clearfix"></div>
        <div class="form-group col-4">
            @Html.LabelFor(m => m.Firstname, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Firstname, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Firstname, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-4">
            @Html.LabelFor(m => m.Lastname, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Lastname, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Firstname, "", new { @class = "text-danger" })
        </div>
        <div class="clearfix"></div>

        <div class="form-group col-2">
            <div>
                @Html.LabelFor(m => m.Birthday, new { @class = "control-label" })
                @Html.TextBoxFor(x => x.Birthday, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Birthday, "", new { @class = "text-danger" })
                @Html.Hidden("BirthdayText", Model.Birthday.ToString("yyyy-MM-dd"))
            </div>
        </div>
        <div class="form-group col-2">
            @Html.LabelFor(m => m.Age, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Age, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Age, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-4">
            @Html.LabelFor(m => m.PhoneNo, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.PhoneNo, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PhoneNo, "", new { @class = "text-danger" })
        </div>
        <div class="clearfix"></div>

        <div class="form-group col-4">
            @Html.LabelFor(m => m.Gender, new { @class = "control-label" })
            @Html.DropDownListFor(x => x.Gender, WebHelper.Gender(), new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-4">
            @Html.LabelFor(m => m.CivilStatus, new { @class = "control-label" })
            @Html.DropDownListFor(x => x.CivilStatus, WebHelper.CivilStatus(), new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CivilStatus, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-10 col-4">
            @Html.LabelFor(m => m.Address, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Address, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="clearfix"></div>

        <div class="form-group col-4">
            @Html.LabelFor(m => m.Country, new { @class = "control-label" })
            @Html.DropDownListFor(x => x.Country, WebHelper.Countries(), new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Country, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-10 col-4">
            @Html.LabelFor(m => m.State, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.State, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="clearfix"></div>

        <div class="form-group col-4">
            @Html.LabelFor(m => m.Hobby, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Hobby, htmlAttributes: new { @class = "form-control", @data_role = "tagsinput" })
        </div>
        <div class="clearfix"></div>

        <div class="form-group col-2">
            @Html.LabelFor(m => m.DateHired, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.DateHired, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.DateHired, "", new { @class = "text-danger" })
            @Html.Hidden("DateHiredText", Model.DateHired.ToString("yyyy-MM-dd"))
        </div>
        <div class="form-group col-xs-10 col-2">
            @Html.LabelFor(m => m.DateResigned, new { @class = "control-label" })
            @Html.TextBoxFor(x => x.DateResigned, htmlAttributes: new { @class = "form-control" })
            @Html.Hidden("DateResignedText", Model.DateResigned != null ? Model.DateResigned.Value.ToString("yyyy-MM-dd") : null)
        </div>
    </div>
    <hr />
    <input type="submit" id="btn-submit" value="Submit" class="btn btn-primary" />
    }
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    <script>
        $(document).ready(function () {
            $("#DateHired").datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: "yy-mm-dd"
            });
            $("#DateResigned").datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: "yy-mm-dd"
            });
            $("#Birthday").datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: "yy-mm-dd"
            });


            $("#DateHired").val($("#DateHiredText").val());
            $("#DateResigned").val($("#DateResignedText").val());
            $("#Birthday").val($("#BirthdayText").val());
        });
    </script>
}